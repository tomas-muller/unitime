<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/css" href="Release-Notes.css"?>
<!DOCTYPE release-history PUBLIC "-//UniTime//UniTime Release Notes DTD/EN" "Release-Notes.dtd">
<!--
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 *
 * The Apereo Foundation licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 -->

<release-history>

<doc-title>UniTime 4.5 Release Notes</doc-title>
<release>
	<version>4.5.${build.number}</version>
	<release-date>${build.date}</release-date>
	<category>
		<title>Batch Student Scheduling</title>
		<item>
			<name>Past Sections</name>
			<description>
				<line>Added ability to mark sections that are in the past, that is sections that start before the General.ClassesPastDate date.</line>
				<line>The use of past sections can be minimized (using StudentWeights.PastFactor student weight).</line>
			</description>
		</item>
		<item>
			<name>Student Accommodations</name>
			<description>
				<line>Besides of students requiring short distances, additional criteria based on student accommodations were created:
					<line>Students requiring short distances (SD accommodation, there is a conflict when classes are back-to-back and distance in minutes is above zero)</line>
					<line>Students needing some time free (FT accommodation, a higher penalization for free-time conflicts)</line>
					<line>Students needing back-to-back classes (BTB accommodation, a penalization for classes that are more than 30 minutes of each other)</line>
					<line>Students needing breaks between classes (BBC accommodation, a penalization for classes that are back-to-back, or within 30 minutes of each other)</line>
				</line>
				<line>Please note that these accommodations are only enabled when the new Student Schedule Quality extension is being used (StudentSct.ScheduleQuality = true).</line>
			</description>
		</item>
		<item>
			<name>Curriculum Reservations</name>
			<description>
				<line>Added ability for a curriculum reservation and overrides to have multiple majors.</line>
				<line>Added ability for the curriculum reservations and overrides to match on student minors.
					<line>When a reservation has both majors and minors, a student must have at least one matching minor OR one matching major.</line>
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Online Student Scheduling</title>
		<item>
			<name>Wait-Listing</name>
			<description>
				<line>Status Check: Follow the status fall-backs when checking for wait-list option.</line>
			</description>
		</item>
		<item>
			<name>Deadlines</name>
			<description>
				<line>Added ability to avoid classes that are past the deadline when computing an online schedule or suggestions.</line>
				<line>To be enabled by FindAssignment.CheckDeadlines solver configuration property (defaults to false).</line>
				<line>Deadlines are not checked when extended adds are allowed by the special registration and student agrees to explore conflicting schedule.</line>
			</description>
		</item>
		<item>
			<name>Past Sections</name>
			<description>
				<line>Added ability to mark sections that are in the past.</line>
				<line>When enabled (FindAssignment.AvoidPastSections is true), the Scheduling Assistant will try to minimize the use of sections that are in the past.
						<line>That is before today, possibly adjusted by the number of days in FindAssignment.AvoidPastOffset.</line>
				</line>
			</description>
		</item>
	</category>
		<category>
		<title>Examination Timetabling</title>
		<item>
			<name>Overlapping Periods</name>
			<description>
				<line>Added ability to check for direct (student or instructor) conflicts between two examination periods that overlap in time.</line>
				<line>This is only enabled when solver configuration parameter Exams.CheckForPeriodOverlaps is set to true (defaults to false).</line>
			</description>
		</item>
		<item>
			<name>Examination Events</name>
			<description>
				<line>Added ability generate event's allocated time based on the examination length instead of the examination period length.
					<line>When enabled, a one hour long exam will only allocate one hour (plus the offsets) even when placed in a period of two hours.</line>
				</line>
				<line>To be enabled (for an examination problem) by unitime.examEvent.allocatesTimeBasedExamLength.REF application property, where REF is the examination problem reference.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Administration</title>
		<item>
			<name>Contact Us</name>
			<description>
				<line>Contact Us Email: Set reply-to email address to the email recipient.</line>
			</description>
		</item>
		<item>
			<name>Spring Integration</name>
			<description>
				<line>Spring Integration is now disabled by default (to avoid issues with data/unitime/import folder).</line>
				<line>To enable Spring Integration, set unitime.spring.context.integration=no-integration.xml in catalina.properties.
					<line>This will enable the data exchange imports in the data/unitime/import folder as well as the ability to configure receiving Event Management email responses.</line>
				</line>
			</description>
		</item>
	</category>
</release>
<release>
	<version>4.5.124</version>
	<release-date>Sat, 5 Dec 2020</release-date>
	<category>
		<title>Student Scheduling</title>
		<item>
			<name>Advisor Course Recommendations</name>
			<description>
				<line>A page for the advisor to fill with a student while advising him/her on what courses to take the next term.</line>
				<line>It looks a lot like the Student Course Requests page, with a few fields added (credits per course, notes, etc.).</line>
				<line>When opened, the advisor can look up a student and the page gets pre-populated with the existing data.</line>
				<line>The page  automatically offers course suggestions (but it is possible to put in a free text too), fills in credits, count the credit totals, etc.</line>
				<line>When submitted, there is a PDF version generated that can be printed and signed by the student.</line>
				<line>Allows for student status change when submitted; no need for the advisor to use the dashboard to change the student status.</line>
				<line>UniTime keeps record of these advisor course requests for possible auditing/reporting (what students requested versus what they have been advised, list students that have been already advised that did not fill their course requests in, etc.).</line>
				<line>Student Course Requests page can be pre-populated with these courses, or a student can review the courses filled in by the advisor.</line>
				<line>Optionally, course recommendation may contain wait-listing toggles (based on unitime.acr.waitlist parameter).</line>
			</description>
		</item>
		<item>
			<name>Important Course Requests</name>
			<description>
				<line>Added ability to put a multiple levels to critical courses: Critical &gt; Important &gt; Normal.</line>
				<line>Critical course request are assigned first, then important requests, then the rest.</line>
				<line>More levels can be defined in the future, if needed.</line>
			</description>
		</item>
		<item>
			<name>Alternative Majors</name>
			<description>
				<line>Added ability to load critical courses and degree plans from an alternative major.</line>
				<line>Alternative majors are identified by a student group of a particular type a student is in.
					<line>By default group type is &quot;1st Choice&quot;, and the group abbreviation is area abbv - major code.</line>
				</line>
				<line>Custom class CriticalCoursesExplorers makes use of these (implementing both CriticalCoursesProvider and DegreePlansProvider interfaces).</line>
			</description>
		</item>
		<item>
			<name>Priority Students</name>
			<description>
				<line>Added ability to identify priority students (to be assigned first) by a filter query.</line>
				<line>Improved handling of priority students by the solver.</line>
				<line>Up to 5 priority tiers can be defined (Priority, Senior, Junior, Sophomore, and Frehmen).</line>
			</description>
		</item>
		<item>
			<name>Reservation Restrictions</name>
			<description>
				<line>Added ability to define on a reservation whether it is inclusive or not.</line>
				<line>There is a new mode field when editing a reservation (that is not an override) which can be:
					<line>Default: using unitime.reservations.restrictionsInclusive which defaults to true.</line>
					<line>Reservation: the currently default mode (restrictions are applied at all levels).</line>
					<line>Restriction: not-inclusive mode (restrictions are only applied on the selected level).</line>
				</line>
			</description>
		</item>
		<item>
			<name>Grade Mode / Variable Credit Customization</name>
			<description>
				<line>Added ability to show course credit information on a particular section (not just the first one).</line>
				<line>Gradable subpart (on which the credit is shown) can be provided using the ExternalClassNameHelperInterface interface, implementing HasGradableSubpart sub-interface.</line>
				<line>Banner Integration: Show credit information on the gradable section.</line>
				<line>Banner Integration: For variable credit courses, display assigned credit returned by XE API.</line>
				<line>Special Registration: Added ability to request credit change on a variable credit course.</line>
			</description>
		</item>
		<item>
			<name>Online-Only Students / Courses</name>
			<description>
				<line>Added ability to identify some students as online-only (e.g., with a student group) and restrict them to certain courses or course configurations.</line>
				<line>The restriction can be on courses (using regular expression for course name), or on course configurations (using regular expression on instructional method reference).</line>
				<line>Added ability to hide courses that do not have an online-only option from the online-only students and vice versa (students can not look them up on the Course Requests or Scheduling Assistant page).</line>
				<line>Added ability for the solver to keep out students from courses or course configurations they cannot take.</line>
			</description>
		</item>
		<item>
			<name>Minimal Perturbation Problem Improvements</name>
			<description>
				<line>Improved ability to re-section not-assigned course requests while the rest is kept untouched.</line>
				<line>Existing enrollments can be fixed and left unchanged, even when they are not consistent.</line>
				<line>Single Course MPP: Added ability to re-section only students in the given course or courses, while everything else is left untouched.</line>
			</description>
		</item>
		<item>
			<name>Other Changes &amp; Improvements</name>
			<description>
				<line>Scheduling Dashboard: Added an ability to filter by instructional method.</line>
				<line>Custom integration with a custom student attendance planning tool, showing additional meeting information on a class that a student has enrolled.</line>
				<line>Added ability to save/validate only a subset of students loaded in the student scheduling solver.</line>
				<line>Added ability to put a small penalization on online sections.
					<line>That is sections that do not have a time, that have time and no room, or that have time but the room does not check for conflicts (like the ONLINE room).</line>
				</line>
			</description>
		</item>
		<item>
			<name>No Substitutions</name>
			<description>
				<line>Added ability to reuse the wait-listing toggle as No-Subs (no substitutions) when wait-listing is disabled.
					<line>Course requests that are marked as No-Subs cannot be replaced by a substitute course.</line>
					<line>There is a new parameter of student schedule status (students may or may not be allowed to mark courses as No-Subs).</line>
				</line>
				<line>It is also possible to only allow advisor recommendations to mark courses as No-Subs (students are not allow to see/set No-Subs or Wait-List toggles).
					<line>In this case, solver parameter Load.UseAdvisorWaitLists must be set to true to check for these during the data load.</line>
				</line>
			</description>
		</item>
	</category>
	<category>
		<title>Course Timetabling</title>
		<item>
			<name>Room Sharing</name>
			<description>
				<line>More precise computation of allowed room sharing (how much space is needed in a room).</line>
				<line>This is to avoid issues when three or more classes can share a room and some of these classes do not overlap.
					<line>For example, no more than two classes overlap when there is a Monday class, a Wednesday class, and a Monday-Wednesday class.</line>
				</line>
			</description>
		</item>
		<item>
			<name>Fixed Time MPP</name>
			<description>
				<line>A new ability to assign new rooms while the existing time assignments are left unchanged.</line>
				<line>Fixed Times: all assigned classes have only the assigned time in the domain (time preferences are completely ignored).</line>
				<line>Weakened Distributions: allow hard distribution preferences to be weakened (strongly discouraged instead of prohibited etc.)</line>
				<line>Instructor Conflicts: instructor conflicts can be allowed but penalized.</line>
				<line>Prohibited Rooms: allowed prohibited rooms in the domain (except of rooms that are too small, or not being available for the department).</line>
			</description>
		</item>
		<item>
			<name>Other Changes &amp; Improvements</name>
			<description>
				<line>Class Assignment: When checking for event conflicts, ignore conflicts for rooms that have the conflict checking disabled.</line>
				<line>Instructional Offering Cross Lists: Added ability to edit Reserved space (course limit) even when there is only a single course in the cross-list.</line>
				<line>Course Timetabling Save &amp; Commit: when saving &amp; committing two or more problems together, do not check for conflicts between problems that are being committed.</line>
				<line>Instructor Availability: When checking instructor availability based on events (and possibly classes from other academic sessions), also check for distance conflicts between the class and the unavailability.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Examination Timetabling</title>
		<item>
			<name>Other Changes &amp; Improvements</name>
			<description>
				<line>Added support for rooms that do not check for conflicts (e.g., the ONLINE room).</line>
				<line>Allow for examination periods to run over midnight.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Event Management</title>
		<item>
			<name>Other Changes &amp; Improvements</name>
			<description>
				<line>Added ability to make the Expected Attendance a required field.</line>
			</description>
		</item>
	</category>
	<category>
		<title>Other</title>
		<item>
			<name>Right-to-Left Support</name>
			<description>
				<line>Basic support for right-to-left languages.</line>
				<line>Enable by using ar locale.</line>
			</description>
		</item>
		<item>
			<name>APIs</name>
			<description>
				<line>HQL Reports: Added ability to export HQL reports in JSON format using the API.</line>
				<line>Data Exchange: Course Offerings XML import and export extended to include number of rooms of a class.</line>
				<line>Data Exchange: Include export and import of advisor recommendations with the Student Course Requests XML.</line>
			</description>
		</item>
		<item>
			<name>Other Changes &amp; Improvements</name>
			<description>
				<line>People Lookup: Added ability to search the whole subtree in the LDAP search.</line>
				<line>Task Scheduler: make sure current month is included if it is within 12 months before session start or after session end.</line>
			</description>
		</item>
	</category>
</release>
</release-history>
