<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dbupdate>

<!-- 
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 *
 * The Apereo Foundation licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 -->

<dbupdate>
	<dialect type="mysql">org.hibernate.dialect.MySQLInnoDBDialect</dialect>
	<dialect type="plsql">org.hibernate.dialect.Oracle10gDialect</dialect>
	<update version="1" date="5-Jun-2016" comment="Alternative Course Offering">
		<mysql onFail="done">
			alter table %SCHEMA%.course_offering add alternative_offering_id decimal(20,0) null
		</mysql>
		<plsql onFail="done">
			alter table %SCHEMA%.course_offering add alternative_offering_id number(20)
		</plsql>
		<sql>
			alter table %SCHEMA%.course_offering add constraint fk_course_offering_alternative_offr foreign key (alternative_offering_id)
			references %SCHEMA%.course_offering (uniqueid) on delete set null
		</sql>
	</update>
	<update version="2" date="23-Nov-2016" comment="Student Notes">
		<plsql onFail="done">
			create table %SCHEMA%.student_note (
				uniqueid number(20) constraint nn_student_note_uniqueid not null,
				student_id number(20) constraint nn_student_note_student not null,
				text_note varchar2(1000 chars),
				time_stamp date constraint nn_student_note_ts not null,
				user_id varchar2(40 chars)
			)
		</plsql>
		<plsql>
			alter table %SCHEMA%.student_note add constraint pk_student_note_uniqueid primary key (uniqueid)
		</plsql>
		<mysql onFail="done">
			create table %SCHEMA%.student_note (
				uniqueid decimal(20,0) primary key not null,
				student_id decimal(20,0) not null,
				text_note varchar(1000),
				time_stamp datetime not null,
				user_id varchar(40)
			) engine = INNODB
		</mysql>
		<sql>
			alter table %SCHEMA%.student_note
				add constraint fk_student_note_student foreign key (student_id)
				references %SCHEMA%.student (uniqueid) on delete cascade
		</sql>
	</update>
</dbupdate>